version: '3.8'

services:
  # API Gateway - 모든 서비스의 단일 진입점
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api_gateway
    container_name: api-gateway
    ports:
      - "48000:8000"
    volumes:
      - ./services/api_gateway:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
      - CACHE_TTL=60
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  # Service Registry - 서비스 디스커버리를 위한 레지스트리
  service-registry:
    build:
      context: .
      dockerfile: Dockerfile.service_registry
    container_name: service-registry
    ports:
      - "48007:8007"
    volumes:
      - ./services/service_registry:/app
      - service-registry-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  # Redis - 서비스 레지스트리 및 캐싱용
  redis:
    image: redis:7-alpine
    ports:
      - "46379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - a2a-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Postgres - 에이전트 카드 레지스트리용
  postgres:
    image: postgres:15-alpine
    ports:
      - "45432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=agent_registry
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - a2a-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Broker - 비동기 메시지 처리를 위한 브로커
  message-broker:
    image: rabbitmq:3-management
    ports:
      - "45672:5672"
      - "45673:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - a2a-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent Card Registry - 에이전트 능력 관리
  agent-card-registry:
    build:
      context: .
      dockerfile: Dockerfile.agent_card_registry
    container_name: agent-card-registry
    ports:
      - "48006:8006"
    volumes:
      - ./services/agent_card_registry:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  # 경계(Gateway) 계층
  event-gateway:
    build:
      context: .
      dockerfile: Dockerfile.event_gateway
    container_name: event-gateway
    ports:
      - "48001:8001"
    volumes:
      - ./services/event_gateway:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  chat-gateway:
    build:
      context: .
      dockerfile: Dockerfile.chat_gateway
    container_name: chat-gateway
    ports:
      - "48002:8002"
    volumes:
      - ./services/chat_gateway:/app
    environment:
      - SUPERVISOR_URL=http://supervisor:8003/messages
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
      - supervisor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  # 애플리케이션 계층
  sub-agent:
    build:
      context: .
      dockerfile: Dockerfile.sub_agent
    container_name: sub-agent
    ports:
      - "48010:8000"
    volumes:
      - ./services/sub_agent:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MESSAGE_BROKER_URL=amqp://message-broker:5672
      - AGENT_CARD_REGISTRY_URL=http://agent-card-registry:8006
    networks:
      - a2a-network
    depends_on:
      - service-registry
      - message-broker
      - agent-card-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  supervisor:
    build:
      context: .
      dockerfile: Dockerfile.supervisor
    container_name: supervisor
    ports:
      - "48003:8003"
    volumes:
      - ./services/supervisor:/app
    environment:
      - CHAT_GATEWAY_URL=http://chat-gateway:8002/responses
      - AGENT_CARD_REGISTRY_URL=http://agent-card-registry:8006
      - SUB_AGENT_URL=http://sub-agent:8000/events
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  # 플랫폼 계층
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp_server
    container_name: mcp-server
    ports:
      - "48004:8004"
    volumes:
      - ./services/mcp_server:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - TOOL_REGISTRY_URL=http://tool-registry:8005/tools
      - LLM_REGISTRY_URL=http://llm-registry:8101
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
      - REQUEST_TIMEOUT=10.0
    depends_on:
      - service-registry
      - tool-registry
      - llm-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  tool-registry:
    build:
      context: .
      dockerfile: Dockerfile.tool_registry
    container_name: tool-registry
    ports:
      - "48005:8005"
    volumes:
      - ./services/tool_registry:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  llm-registry:
    build:
      context: .
      dockerfile: Dockerfile.llm_registry
    container_name: llm-registry
    ports:
      - "48101:8101"
    volumes:
      - ./services/llm_registry:/app
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8007/services
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
    depends_on:
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8101/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - a2a-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "48080:8000"
    volumes:
      - ./services/frontend:/app
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
      - CHAT_GATEWAY_URL=http://chat-gateway:8002
      - SUPERVISOR_URL=http://supervisor:8003
      - TOOL_REGISTRY_URL=http://tool-registry:8005
      - EVENT_GATEWAY_URL=http://event-gateway:8001
      - MCP_SERVER_URL=http://mcp-server:8004
      - SERVICE_REGISTRY_URL=http://service-registry:8007
      - MAX_RETRIES=5
      - RETRY_DELAY=2.0
      - PYTHONUNBUFFERED=1
    depends_on:
      - api-gateway
      - service-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - a2a-network

  # 모니터링 및 로깅
  prometheus:
    image: prom/prometheus
    ports:
      - "49090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - a2a-network

  grafana:
    image: grafana/grafana
    ports:
      - "43000:3000"
    volumes:
      - ./monitoring/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - a2a-network

volumes:
  postgres-data:
  redis-data:
  kafka-data:
  prometheus-data:
  grafana-data:
  frontend-chainlit:
  rabbitmq-data:
  service-registry-data:

networks:
  a2a-network:
    driver: bridge